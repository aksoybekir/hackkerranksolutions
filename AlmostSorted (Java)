import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the almostSorted function below.
    static void almostSorted(int[] arr) {

           
        boolean sorted = false;
        int left = 0;
        int right = 0;
        int swap = 0;
        int dif = 0;

        
        for(int i = 0; i < arr.length; i++){
            if(i == (arr.length - 1)){
                sorted = true;
                break;
            }
            if(arr[i] < arr[i+1]){
                continue;
            }
            else {
                left = i;
                break;
            }    
        }
        
        
        if (sorted == false) {
            for(int i = arr.length - 1; i >= 0; i--){
                if(i == 0){
                    sorted = true;
                    break;
                }
                if(arr[i] > arr[i-1]){
                    continue;
                }
                else {
                    right =i;
                    break;
                }    
            }
        }
            
        int iol= left;
        int ior= right;
        
        if (right == left) {
            System.out.println("no");
        }
        
        else if(sorted == false) { 
            
            dif = right - left + 1;
            
            while ((right - left) > 0) {
                
                if( arr[left] > arr[right]) {
                    
                    int rightvalue = arr[right];
                    int leftvalue = arr[left];
                    
                    arr[right] = leftvalue;
                    arr[left] = rightvalue;
                    
                    swap +=1;
                }
                right-=1;
                left+=1;
            }
            
            for(int i = 0; i < arr.length; i++){
                if(i == (arr.length - 1)){
                    sorted = true;
                    break;
                }
                if(arr[i] < arr[i+1]){
                    continue;
                }
                else {
                    break;
                }    
            }
            
            if (sorted) {    
                if(swap == 1) {
                    System.out.println("yes");
                    System.out.print("swap");
                    System.out.println(" " + (iol+1) + " " + (ior+1));
                }
                
                else if(swap == Math.floor(dif/2)){
                    System.out.println("yes");
                    System.out.print("reverse");
                    System.out.println(" " + (iol+1) + " " + (ior+1));
                }
            }
            else
                System.out.println("no");
        }
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        almostSorted(arr);

        scanner.close();
    }
}
